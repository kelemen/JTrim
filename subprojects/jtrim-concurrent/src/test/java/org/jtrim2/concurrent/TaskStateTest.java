package org.jtrim2.concurrent;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import static org.junit.Assert.*;

/**
 *
 * @author Kelemen Attila
 */
public class TaskStateTest {

    public TaskStateTest() {
    }

    @BeforeClass
    public static void setUpClass() {
    }

    @AfterClass
    public static void tearDownClass() {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    /**
     * Test of values method, of class TaskState.
     */
    @Test
    public void testAutoGenerated() {
        for (TaskState state: TaskState.values()) {
            assertSame(state, TaskState.valueOf(state.toString()));
        }
    }

    /**
     * Test of isDone method, of class TaskState.
     */
    @Test
    public void testIsDone() {
        assertFalse(TaskState.NOT_STARTED.isDone());
        assertFalse(TaskState.RUNNING.isDone());
        assertTrue(TaskState.DONE_CANCELED.isDone());
        assertTrue(TaskState.DONE_COMPLETED.isDone());
        assertTrue(TaskState.DONE_ERROR.isDone());
        assertEquals("All states must be tested", 5, TaskState.values().length);
    }
}
